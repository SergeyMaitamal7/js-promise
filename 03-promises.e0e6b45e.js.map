{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,UAyB/B,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhCbN,EAAKC,KAAKa,iBAAiB,UAE3B,SAAkBC,GAChBA,EAAEC,iBAEF,MAAMC,EAAYC,OAAOlB,EAAKC,KAAKkB,SAASb,MAAMc,OAC5CC,EAAYH,OAAOlB,EAAKC,KAAKkB,SAASG,KAAKF,OAC3CG,EAASL,OAAOlB,EAAKC,KAAKkB,SAASI,OAAOH,OAEhD,IAAK,IAAII,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAEnCpB,EAAcoB,EADAP,EAAYI,EAAYG,GAEnCC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBR,EAAA4B,OAAOC,QAAQ,qBAAqBtB,QAAeC,MAAU,IAE9DsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBR,EAAA4B,OAAOG,QAAQ,qBAAqBxB,QAAeC,MAAU,IAEjES,EAAEe,cAAcC,O,KAoBJ,IAAIrB,SAAQ,CAACC,EAASC,KAElCD,EAAQ,SAEVC,EAAO,SAAS,IAGVa,MAAMO,GAAQC,QAAQC,IAAIF,KAAOJ,OAAOO,GAASF,QAAQC,IAAIC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const firsDelay = Number(refs.form.elements.delay.value);\n  const stepDelay = Number(refs.form.elements.step.value);\n  const amount = Number(refs.form.elements.amount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    const delay = firsDelay + stepDelay * i;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(` Rejected promise ${position} in ${delay}ms`);\n      });\n    e.currentTarget.reset();\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\nconst sucses = true;\nconst promise = new Promise((resolve, reject) => {\n  if (sucses) {\n    resolve('dfsdg');\n  }\n  reject('ahahah');\n});\n\npromise.then((data)=> console.log(data)).catch((error)=> console.log(error))"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","firsDelay","Number","elements","value","stepDelay","step","amount","i","then","Notify","success","catch","failure","currentTarget","reset","data","console","log","error"],"version":3,"file":"03-promises.e0e6b45e.js.map"}